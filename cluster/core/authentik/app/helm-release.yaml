---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: authentik
spec:
  interval: 15m
  chart:
    spec:
      chart: authentik
      version: 24.5.0
      sourceRef:
        kind: HelmRepository
        name: truechartsoci
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:

    podOptions:
      # TODO: Remove this after Authentik fixed their shit
      defaultSpread: false
      hostAliases:
        - ip: "192.168.10.101"
          hostnames:
            - "auth.${BASE_DOMAIN2}"
            - "auth.${BASE_DOMAIN}"
            - "my.${BASE_DOMAIN2}"
            - "my.${BASE_DOMAIN}"
    authentik:
      credentials:
        # Only works on initial install
        email: ${AUTHENTIKLOGIN}
        password: ${AUTHENTIKPASS}
        # Optional, only set if you want to use it
        bootstrapToken: ""
      general:
        disableUpdateCheck: true
        disableStartupAnalytics: true
        allowUserChangeName: true
        allowUserChangeEmail: true
        allowUserChangeUsername: true
        overwriteDefaultBlueprints: false
        gdprCompliance: false
        tokenLength: 128
        impersonation: true
        avatars:
          - gravatar
          - initials
        footerLinks:
          - name: TrueCharts
            href: https://${BASE_DOMAIN2}
      email:
        host: "${SMTP}"
        port: 587
        username: ${ICLOGIN}
        password: ${ICPASS}
        useTLS: true
        from: "noreply@truecharts.org"
      logging:
        # info, debug, warning, error, trace
        logLevel: error
      geoip:
        enabled: false
        # Ignored if enabled is true
        # If enabled is false, and this is true, the
        # built-in GeoIP database will be wiped
        wipeBuiltInDb: false
        editionID: GeoLite2-City
        frequency: 8
        accountID: ""
        licenseKey: ""
      outposts:
        proxy:
          enabled: true
          token: ${AUTHPROX}
          host: https://my.${BASE_DOMAIN2}
          browserHost: https://my.${BASE_DOMAIN2}
        radius:
          enabled: true
          token: ${AUTHRAD}
        ldap:
          enabled: true
          token: ${AUTHLDAP}
    ingress:
      main:
        enabled: true
        integrations:
          traefik:
            enabled: true
            middlewares:
              - name: bouncer
                namespace: traefik
          certManager:
            enabled: true
            certificateIssuer: tc-le-prod
        hosts:
          - host: my.${BASE_DOMAIN2}
            paths:
              - path: /
                pathType: Prefix
      proxy:
        enabled: true
        primary: false
        targetSelector:
          proxy: https
        hosts:
          -  host: auth.${BASE_DOMAIN2}
             paths:
               - path: /
                 pathType: Prefix
          -  host: "*.${BASE_DOMAIN2}"
             paths:
               - path: /outpost.goauthentik.io
                 pathType: Prefix
          # -  host: ${BASE_DOMAIN2}
          #    paths:
          #      - path: /outpost.goauthentik.io
          #        pathType: Prefix

        integrations:
          certManager:
            enabled: true
            certificateIssuer: tc-le-prod
          traefik:
            enabled: true
            middlewares:
              - name: bouncer
                namespace: traefik
            entrypoints:
              - websecure
            enableFixedMiddlewares: true
            forceTLS: true
            allowCors: false
            fixedMiddlewares:
              - name: chain-basic
                namespace: ""
      proxy-priv:
        enabled: true
        primary: false
        targetSelector:
          proxy: https
        hosts:
          -  host: auth.${BASE_DOMAIN}
             paths:
               - path: /
                 pathType: Prefix
          -  host: "*.${BASE_DOMAIN}"
             paths:
               - path: /outpost.goauthentik.io
                 pathType: Prefix
          # -  host: ${BASE_DOMAIN}
          #    paths:
          #      - path: /outpost.goauthentik.io
          #        pathType: Prefix
        integrations:
          certManager:
            enabled: true
            certificateIssuer: ks-le-prod
          traefik:
            enabled: true
            middlewares:
              - name: bouncer
                namespace: traefik
            entrypoints:
              - websecure
            enableFixedMiddlewares: true
            forceTLS: true
            allowCors: false
            fixedMiddlewares:
              - name: chain-basic
                namespace: ""

    cnpg:
      main:
        # mode: recovery
        cluster:
          storage:
            storageClass: "openebs-hostpath"
          walStorage:
            storageClass: "openebs-hostpath"
        backups:
          enabled: true
          serverName: vaultwarden-cnpg-main-1
          endpointURL: "${S3URL}"
          provider: s3
          s3:
            bucket: "${S3PREFIX}-cnpg-authentik"
            path: "/"
            accessKey: "${S3ID}"
            secretKey: "${S3KEY}"
        recovery:
          method: object_store
          endpointURL: "${S3URL}"
          provider: s3
          s3:
            bucket: "${S3PREFIX}-cnpg-authentik"
            path: "/"
            accessKey: "${S3ID}"
            secretKey: "${S3KEY}"

---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: vaultwarden
spec:
  interval: 15m
  chart:
    spec:
      chart: vaultwarden
      version: 26.8.15
      sourceRef:
        kind: HelmRepository
        name: truechartsoci
        namespace: flux-system
      interval: 15m
  timeout: 20m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:

    vaultwarden:
      allowSignups: true
      signupDomains:
        - truecharts.org
        - kjeldschouten.nl
      verifySignup: true
      requireEmail: true
      allowInvitation: true
      defaultInviteName: "TrueCharts"
      showPasswordHint: true
      enableWebVault: true
      # Restrict creation of orgs. Options are: 'all', 'none' or a comma-separated list of users.
      orgCreationUsers: all
      ## Limit attachment disk usage per organization.
      # attachmentLimitOrg:
      ## Limit attachment disk usage per user.
      # attachmentLimitUser:
      ## HaveIBeenPwned API Key. Can be purchased at https://haveibeenpwned.com/API/Key.
       # hibpApiKey:

      admin:
        enabled: true
        disableAdminToken: false
        token: ${VWADMIN}
      smtp:
        enabled: true
        host: "${SMTP}"
        from: "noreply@truecharts.org"
        fromName: "TrueCharts Vaultwarden"
        security: starttls
        port: 587
        # authMechanism: Plain
        # heloName: ""
        user: "${ICLOGIN}"
        password: "${ICPASS}"
      yubico:
        enabled: false
        ## Yubico server. Defaults to YubiCloud.
        # server:
        ## Yubico ID and Secret Key.
        # clientId:
        # secretKey:
      push:
        enabled: true
        installationId: ${BWPUSHID}
        installationKey: ${BWPUSHKEY}
      log:
        # Log level. Options are "trace", "debug", "info", "warn", "error" or "off".
        level: "trace"
      icons:
        cache: 0


    ingress:
      main:
        enabled: true
        integrations:
          certManager:
            enabled: true
            certificateIssuer: tc-le-prod
          traefik:
            enabled: true
            middlewares:
              - name: bouncer
                namespace: traefik
        hosts:
          - host: vaultwarden.${BASE_DOMAIN2}
            paths:
              - path: /
                pathType: Prefix
      admin:
        enabled: true
        primary: false
        targetSelector:
          main: main
        hosts:
          -  host: vaultwarden.${BASE_DOMAIN2}
             paths:
               - path: /admin
                 pathType: Prefix
        integrations:
          certManager:
            enabled: true
            certificateIssuer: tc-le-prod
          traefik:
            enabled: true
            middlewares:
              - name: bouncer
                namespace: traefik
              - name: auth
                namespace: traefik
            entrypoints:
              - websecure
            enableFixedMiddlewares: true
            forceTLS: true
            allowCors: false
            fixedMiddlewares:
              - name: chain-basic
                namespace: ""


    cnpg:
      main:
        # mode: recovery
        cluster:
          storage:
            storageClass: "openebs-hostpath"
          walStorage:
            storageClass: "openebs-hostpath"
        backups:
          enabled: true
          endpointURL: "${S3URL}"
          provider: s3
          s3:
            bucket: "${S3PREFIX}-cnpg-vaultwarden"
            path: "/"
            accessKey: "${S3ID}"
            secretKey: "${S3KEY}"
        recovery:
          method: object_store
          endpointURL: "${S3URL}"
          provider: s3
          s3:
            bucket: "${S3PREFIX}-cnpg-vaultwarden"
            path: "/"
            accessKey: "${S3ID}"
            secretKey: "${S3KEY}"
